@import "./variables";

@mixin positionner($x, $y) {
    position : absolute;
    left     : $x;
    top      : $y;
    transform: translate(-$x, -$y);
}

@mixin pseudoEl($d:"block", $pos:"absolute", $content:"") {
    content : $content;
    display : $d;
    position: $pos;
}

@mixin linkEffect($visible: false) {

    @extend %decorationNone;
    @extend %posRelative;

    &::after {
        content: '';
        display: block;
        width  : 100%;
        height : 2px;

        @if $visible {
            transform       : scale(1);
            background-color: currentColor;
        }

        @else {

            transform: scale(0);
        }

        transition: var(--transition-1);

    }

    @if($visible==false) {

        &:hover::after,
        &.active::after {
            transform       : scale(1);
            background-color: currentColor;
        }
    }
}

@mixin hoverLink($visible:true) {
    text-decoration: none;

    &::after {
        content : '';
        position: absolute;
        display : block;
        width   : 100%;
        height  : rem(2);

        @if($visible==false) {
            transition: var(--transition-1);
        }

        @else {

            transform       : scale(1);
            background-color: currentColor;
        }

    }

    @if(visible==false) {


        &:hover::after {
            transform       : scale(1);
            background-color: var(--color-little-white);
        }
    }
}

@mixin makeSize($sizeDefault, $sizeDesk) {
    font-size: $sizeDefault;
    @extend %bold;
    @extend %titleSpace;

    @media #{$sm-screen} {
        font-size: $sizeDesk;
    }
}

@mixin makeUtilitieSpacing($prefix:'m', $number:10, $spacingName:'margin') {
    @for $i from 1 through $number {
        .#{$prefix}-#{$i} {
            #{$spacingName}: 0.25rem * $i !important;
        }
    }
}

@mixin pseudoStartElement() {

    &::before,
    &::after {
        content : '';
        position: absolute;
        z-index : -1;
        display : block;
        @content
    }
}

@mixin utilitiesPosition($prefix:'mx', $position:'x', $number, $spacingName:'margin-inline') {
    @if($position=='x') {
        @for $i from 1 through $number {
            .#{$prefix}-#{$i} {
                #{$spacingName}: (0.25*$i);
            }
        }
    }

    @else if($position=='y') {
        @for $i from 1 through $number {
            .#{$prefix}-#{$i} {
                #{$spacing}: (0.25rem*$i);
            }
        }
    }

    @else {
        #{$spacingName}: (0.25rem*$i);
    }
}

/** prefix:*/
// mx-[number]
// my-[number]
// m-start-[number]
// m-end-[number]


// px-[number]
// py-[number]
// p-start-[number]
// p-end-[number]